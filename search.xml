<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>蓝桥杯题目详解</title>
    <url>/2022/12/01/%E8%93%9D%E6%A1%A5%E6%9D%AF%E9%A2%98%E7%9B%AE%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="2022-12-01"><a href="#2022-12-01" class="headerlink" title="2022 - 12 - 01"></a>2022 - 12 - 01</h1><h2 id="一、高斯日记"><a href="#一、高斯日记" class="headerlink" title="一、高斯日记"></a>一、高斯日记</h2><figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">/*</span><br><span class="hljs-comment">    题目标题:高斯日记</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    大数学家高斯有个好习惯:无论如何都要记日记。</span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">    他的日记有个与众不同的地方，他从不注明年月日，而是用一个整数代替，比如:4210</span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">    后来人们知道，那个整数就是日期，它表示那一天是高斯出生后的第几天。这或许也是个好习惯，它时时刻刻提醒自己时间易逝。</span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">    高斯出生于:1777年4月30日。</span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">    在高斯发现的一个重要定理的日记上标注着:5343，因此可算出那天是:1791年12月15日。</span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">    高斯获得博士学位的那天日记上标着:8113</span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">    请你算出高斯获得博士学位的年月日。</span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">    提交答案的格式是:yyyy-mm-dd，例如:1980-03-21</span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">    请严格按照格式，通过浏览器提交答案。</span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">    注意:只提交这个日期，不要写其它附加内容，比如:说明性的文字。</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iomanip&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">isLeap</span><span class="hljs-params">(<span class="hljs-type">int</span> y)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>((y % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; y % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>) || y % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> y = <span class="hljs-number">1777</span>, m = <span class="hljs-number">4</span>, d = <span class="hljs-number">30</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8112</span>; ++i) &#123;<br>        ++ d;<br>        <span class="hljs-keyword">if</span>(m == <span class="hljs-number">1</span> || m == <span class="hljs-number">3</span> || m == <span class="hljs-number">5</span> || m == <span class="hljs-number">7</span> || m == <span class="hljs-number">8</span> || m == <span class="hljs-number">10</span> || m == <span class="hljs-number">12</span>) &#123;<br>            <span class="hljs-keyword">if</span>(m == <span class="hljs-number">12</span> &amp;&amp; d &gt; <span class="hljs-number">31</span>) &#123;<br>                y ++;<br>                d = <span class="hljs-number">1</span>;<br>                m = <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m != <span class="hljs-number">12</span> &amp;&amp; d &gt; <span class="hljs-number">31</span>) &#123;<br>                d = <span class="hljs-number">1</span>;<br>                ++ m;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span>) &#123;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">isLeap</span>(y) &amp;&amp; d &gt; <span class="hljs-number">29</span>) &#123;<br>                    ++ m;<br>                    d = <span class="hljs-number">1</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">isLeap</span>(y) &amp;&amp; d &gt; <span class="hljs-number">28</span>) &#123;<br>                    ++ m;<br>                    d = <span class="hljs-number">1</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(d &gt; <span class="hljs-number">30</span>) &#123;<br>                ++ m;<br>                d = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    cout &lt;&lt; y &lt;&lt; <span class="hljs-string">&#x27;-&#x27;</span> &lt;&lt; <span class="hljs-built_in">setfill</span>(<span class="hljs-string">&#x27;0&#x27;</span>) &lt;&lt; <span class="hljs-built_in">setw</span>(<span class="hljs-number">2</span>) &lt;&lt; m &lt;&lt; <span class="hljs-string">&#x27;-&#x27;</span> <br>    &lt;&lt; <span class="hljs-built_in">setfill</span>(<span class="hljs-string">&#x27;0&#x27;</span>) &lt;&lt; <span class="hljs-built_in">setw</span>(<span class="hljs-number">2</span>) &lt;&lt; d;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<p><strong>本题简单题，想完成该题主要是必须要逻辑清晰。</strong></p>
<ul>
<li><strong>我设了三个变量 y，m，d，代表高斯出生的年，月，日。</strong></li>
<li><strong>在接下来的 for 循环内 d 每加一代表过去一天，然后再进行判断是否需要进位（即如果天数大于该月的总天数，就将月份数加一，号数变为一号）。</strong></li>
<li><strong>我将月份天数进行分类，按 28&#x2F;29&#x2F;30 天的为一边，31 天的为另一边。</strong></li>
<li><strong>在 28&#x2F;29&#x2F;30 这一边因为包含二月，它有闰年之分，所以我又将二月单独挑出来判断是否为闰年，再以大于 28&#x2F;29 天为条件进位，其他的就是普通的大于 30 天就进位。</strong></li>
<li><strong>同样的，在 31 天那边也有特殊情况——12 月，在12 月 31 号后年也要进位，因此将它单独挑出来，分为 12 月和其他的。</strong></li>
<li><strong>输出注意补零。</strong></li>
</ul>
<p><strong>PS. 今天是我出生后的 6981 天，令人感叹。</strong></p>
<h1 id="2022-12-02"><a href="#2022-12-02" class="headerlink" title="2022 - 12 - 02"></a>2022 - 12 - 02</h1><h2 id="二、-递归-母牛的故事"><a href="#二、-递归-母牛的故事" class="headerlink" title="二、[递归]母牛的故事"></a>二、[递归]母牛的故事</h2><figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">/*</span><br><span class="hljs-comment">	有一头母牛，它每年年初生一头小母牛。每头小母牛从第四个年头开始，每年年	初也生一头小母牛。请编程实现在第n年的时候，共有多少头母牛？</span><br><span class="hljs-comment">	</span><br><span class="hljs-comment">	输入数据由多个测试实例组成，每个测试实例占一行，包括一个整数n(0&lt;n&lt;55)，n的含义如题目中描述。n=0表示输入数据的结束，不做处理。</span><br><span class="hljs-comment">	</span><br><span class="hljs-comment">	对于每个测试实例，输出在第n年的时候母牛的数量。（输入n = 1 时，结果也为 1）</span><br><span class="hljs-comment">每个输出占一行。</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">getAllnum</span><span class="hljs-params">(<span class="hljs-type">long</span> <span class="hljs-type">long</span> a[])</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">4</span> ; i &lt; <span class="hljs-number">54</span>; ++ i) &#123;<br>        a[i] = a[i - <span class="hljs-number">1</span>] + a[i - <span class="hljs-number">3</span>]; <span class="hljs-comment">// ***</span><br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> s[<span class="hljs-number">54</span>] &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>&#125;;<br>    <span class="hljs-built_in">getAllnum</span>(s);<br>    <span class="hljs-keyword">while</span>(cin &gt;&gt; n) &#123;<br>        <span class="hljs-keyword">if</span>(!n) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        <br>        <span class="hljs-keyword">if</span>(n &lt; <span class="hljs-number">5</span>) cout &lt;&lt; n &lt;&lt; endl;<br>        <span class="hljs-keyword">else</span> &#123;<br>            cout &lt;&lt; s[n - <span class="hljs-number">1</span>] &lt;&lt; endl;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<p><strong>本题靠找规律。</strong></p>
<p><strong>已知有四种牛 —— 一岁的，两岁的，三岁的，四岁能生育的。由于 n &#x3D; 1 时，输出 1，可知，第一年的成牛不生育，因此我们可以列出六年内各种牛的数量来找规律。</strong></p>
<p><strong>设成牛第 n 年的数量为 a[n]，一岁的为 b[n]， 二岁的为 c[n], 三岁的为 d[n]。可得规律为：</strong></p>
<p><strong>a[n] &#x3D; a[n - 1] + b[n - 1]</strong></p>
<p><strong>b[n] &#x3D; c[n - 1]</strong></p>
<p><strong>c[n] &#x3D; a[n - 1]</strong></p>
<p><strong>d[n] &#x3D; a[n]</strong></p>
<p><strong>设牛的总数为 s[n]，有：</strong></p>
<p><strong>s[n] &#x3D; a[n] + b[n] + c[n] +d[n]</strong></p>
<p>​	    <strong>&#x3D; a[n - 1] + b[n - 1] + c[n - 1] + a[n - 1] + a[n]</strong></p>
<p>​		<strong>&#x3D; a[n - 1] + b[n - 1] + c[n - 1] + d[n - 1] + a[n - 1] +b [n - 1]</strong></p>
<p>​		<strong>&#x3D; s[n - 1] + a[n - 2] + b[n - 2] + c[n - 2]</strong></p>
<p>​		<strong>&#x3D; s[n - 1] + a[n - 3] + b[n - 3] + c[n - 3] + a[n - 3]</strong></p>
<p>​		<strong>&#x3D; s[n - 1] + a[n - 3] + b[n - 3] + c[n - 3] + d[n - 3]</strong></p>
<p>​		<strong>&#x3D; s[n - 1] + s[n - 3]</strong></p>
<p><strong>找规律可知 s[i] &#x3D; i (i &#x3D; 1, 2, 3, 4) , 并且已知 n &lt; 55，因此得到规律后很轻松就能直接算出 54 年内的每一年牛的数量，存在数组里直接按 n 的大小调用即可。</strong></p>
]]></content>
  </entry>
  <entry>
    <title>动态规划 &lt;dp 算法&gt;</title>
    <url>/2022/12/02/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%20(dp%E7%AE%97%E6%B3%95)/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
